ARCS OFFLINE CALCULATION MODE
◆ 行列宣言とセットのテスト

◆ 行列の表示のテスト
A = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

B = 
[  5  1 -3 ]
[  3 -1  7 ]
[  4  2 -5 ]

C = 
[  1.0000  1.0000  1.0000 ]
[  2.0000  3.0000 -2.0000 ]
[  3.0000 -1.0000  1.0000 ]

A = [ 3 x 3 ]

◆ 定数行列，コンパイル時定数行列と初期化のテスト
Alpha = 
[  1  2 ]
[  3  4 ]

Beta = 
[  5  6 ]
[  7  8 ]


◆ 縦ベクトルの[]オペレータによる要素アクセスのテスト
alpha = 
[  1 ]
[  2 ]
[  3 ]
[  4 ]
[  5 ]

alpha[3] =  3
alpha[3] =  6


◆ 演算子のテスト
+A = C = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

-A = C = 
[ -1 -1 -1 ]
[ -2 -3  2 ]
[ -3  1 -1 ]

A + B = C = 
[  6  2 -2 ]
[  5  2  5 ]
[  7  1 -4 ]

A + 3 = C = 
[  4  4  4 ]
[  5  6  1 ]
[  6  2  4 ]

A - 3 = C = 
[ -2 -2 -2 ]
[ -1  0 -5 ]
[  0 -4 -2 ]

A - B = C = 
[ -4  0  4 ]
[ -1  4 -9 ]
[ -1 -3  6 ]

A*B = C = 
[  12  2 -1 ]
[  11 -5  25 ]
[  16  6 -21 ]

A*2 = C = 
[  2  2  2 ]
[  4  6 -4 ]
[  6 -2  2 ]

+=A = C = 
[  3  3  3 ]
[  6  9 -6 ]
[  9 -3  3 ]

+=2 = C = 
[  5  5  5 ]
[  8  11 -4 ]
[  11 -1  5 ]

-=A = C = 
[  4  4  4 ]
[  6  8 -2 ]
[  8  0  4 ]

-=1 = C = 
[  3  3  3 ]
[  5  7 -3 ]
[  7 -1  3 ]

A^2 = C = 
[  6  3  0 ]
[  2  13 -6 ]
[  4 -1  6 ]

3 + A = C = 
[  4  4  4 ]
[  5  6  1 ]
[  6  2  4 ]

3 - A = C = 
[  2  2  2 ]
[  1  0  5 ]
[  0  4  2 ]

2*A = C = 
[  2  2  2 ]
[  4  6 -4 ]
[  6 -2  2 ]


◆ アダマール乗除演算子のテスト
Gamma = 
[  5  12 ]
[  21  32 ]

Gamma = 
[  0.2  0.333333 ]
[  0.428571  0.5 ]


◆ 行列の生配列のテスト
J[i] = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

J[i] = 
[  2  2  2 ]
[  2  3 -2 ]
[  3 -1  2 ]

J[i] = 
[  3  3  3 ]
[  2  3 -2 ]
[  3 -1  3 ]

inv(A*J[i]) = 
[  0.2222 -0.0556 -0.0556 ]
[ -0.1111  0.1111  0.1111 ]
[ -0.1667  0.0556  0.2222 ]

inv(A*J[i]) = 
[  0.2647 -0.0588 -0.0882 ]
[ -0.1340  0.0915  0.0817 ]
[ -0.1585  0.0229  0.1454 ]

inv(A*J[i]) = 
[  0.3102 -0.0579 -0.1134 ]
[ -0.1667  0.0833  0.0833 ]
[ -0.1620  0.0116  0.1227 ]


◆ 行列のstd::array配列のテスト
K.at(i) = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

K.at(i) = 
[  2  2  2 ]
[  2  3 -2 ]
[  3 -1  2 ]

K.at(i) = 
[  3  3  3 ]
[  2  3 -2 ]
[  3 -1  3 ]

inv(A*K.at(i)) = 
[  0.2222 -0.0556 -0.0556 ]
[ -0.1111  0.1111  0.1111 ]
[ -0.1667  0.0556  0.2222 ]

inv(A*K.at(i)) = 
[  0.2647 -0.0588 -0.0882 ]
[ -0.1340  0.0915  0.0817 ]
[ -0.1585  0.0229  0.1454 ]

inv(A*K.at(i)) = 
[  0.3102 -0.0579 -0.1134 ]
[ -0.1667  0.0833  0.0833 ]
[ -0.1620  0.0116  0.1227 ]


◆ 零行列，1行列，単位行列のテスト
O = 
[  0  0  0 ]
[  0  0  0 ]
[  0  0  0 ]

l = 
[  1  1  1 ]
[  1  1  1 ]
[  1  1  1 ]

I = 
[  1  0  0 ]
[  0  1  0 ]
[  0  0  1 ]


◆ 行列要素を設定する系の関数のテスト
D = 
[ -1  2 ]
[ -3  4 ]
[ -5  6 ]

D = 
[ -1  2 ]
[ -3  4 ]
[  3.14159  6 ]

D.GetElem = 3.141590
D = 
[ -1  2 ]
[ -3  4 ]
[  2.71828  6 ]

D.GetElement = 2.718280
E = 
[  3.939  3.939 ]
[  3.939  3.939 ]
[  3.939  3.939 ]

E = 
[  0  0 ]
[  0  0 ]
[  0  0 ]


◆ 行列演算補助系の関数のテスト
tp(D) = 
[ -1 -3  2.71828 ]
[  2  4  6 ]

tr(A) = 5.000000
prod(A) = 3.000000
diag(A) = 
[  1 ]
[  3 ]
[  1 ]

sumrow(D) = 
[  1 ]
[  1 ]
[  8.71828 ]

sumcolumn(D) = 
[ -1.28172  12 ]

max(v) = 33.000000
absmax(v) = 33.000000
maxidx(v) = 3
absmaxidx(v) = 3
nonzeroele(I) = 3
rank(I) = 3

◆ 要素ごとの数学関数のテスト
expe( Matrix<3,3>::eye()) = 
[  2.71828  1  1 ]
[  1  2.71828  1 ]
[  1  1  2.71828 ]

loge( Matrix<3,3>::eye()*2.71828) = 
[  0.999999 -inf -inf ]
[ -inf  0.999999 -inf ]
[ -inf -inf  0.999999 ]

abse(-Matrix<3,3>::eye()) = 
[  1  0  0 ]
[  0  1  0 ]
[  0  0  1 ]

sqrte(Matrix<3,3>::eye()*2.0) = 
[  1.41421  0  0 ]
[  0  1.41421  0 ]
[  0  0  1.41421 ]


◆ 行・列操作系の関数のテスト
getrow(D, 2) = 
[ -3  4 ]

D = 
[ -1  2 ]
[  11  22 ]
[  2.71828  6 ]

D = 
[  11  22 ]
[ -1  2 ]
[  2.71828  6 ]

D = 
[  3.14  3.14 ]
[ -1  2 ]
[  2.71828  6 ]

getcolumn(D, 1) = 
[  3.14 ]
[ -1 ]
[  2.71828 ]

D = 
[  11  3.14 ]
[  22  2 ]
[  33  6 ]

D = 
[  3.14  11 ]
[  2  22 ]
[  6  33 ]

D = 
[  3.14  11 ]
[  3.14  22 ]
[  6  33 ]

D2 = 
[   1.00   2.00   3.00   4.00   5.00   6.00 ]
[   7.00   8.00   9.00  10.00  11.00  12.00 ]
[  13.00  14.00  15.00  16.00  17.00  18.00 ]
[  19.00   3.14  21.00  22.00  23.00  24.00 ]
[  25.00   3.14  27.00  28.00  29.00  30.00 ]
[  31.00   6.00  33.00  34.00  35.00  36.00 ]

vD2 = 
[  3.14 ]
[  3.14 ]
[  6 ]

sD2 = 
[  3.14  21  22 ]
[  3.14  27  28 ]
[  6  33  34 ]


◆ 並び替えのテスト
orderrow(D, vi) = 
[  6  33 ]
[  3.14  11 ]
[  3.14  22 ]

reorderrow(D, vi) = 
[  3.14  22 ]
[  6  33 ]
[  3.14  11 ]

shiftup(A) = 
[  2  3 -2 ]
[  3 -1  1 ]
[  0  0  0 ]

shiftdown(A) = 
[  0  0  0 ]
[  1  1  1 ]
[  2  3 -2 ]

shiftright(A) = 
[  0  1  1 ]
[  0  2  3 ]
[  0  3 -1 ]

shiftleft(A) = 
[  1  1  0 ]
[  3 -2  0 ]
[ -1  1  0 ]

shiftup(A, 2) = 
[  3 -1  1 ]
[  0  0  0 ]
[  0  0  0 ]

shiftdown(A, 2) = 
[  0  0  0 ]
[  0  0  0 ]
[  1  1  1 ]

shiftright(A, 2) = 
[  0  0  1 ]
[  0  0  2 ]
[  0  0  3 ]

shiftleft(A, 2) = 
[  1  0  0 ]
[ -2  0  0 ]
[  1  0  0 ]

gettriup(A) = 
[  1  1  1 ]
[  0  3 -2 ]
[  0  0  1 ]

gettriup(A, 1) = 
[  0  1  1 ]
[  0  0 -2 ]
[  0  0  0 ]


◆ ノルム演算系のテスト
infnorm(A) = 7.000000
euclidnorm(v) = 41.158231

◆ LU分解のテスト
L = 
[  1  0  0 ]
[  0.666667  1  0 ]
[  0.333333  0.363636  1 ]

U = 
[  3 -1  1 ]
[  0  3.66667 -2.66667 ]
[  0  0  1.63636 ]

L*U = 
[  3 -1  1 ]
[  2  3 -2 ]
[  1  1  1 ]

reorderrow(L*U, vv) = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]


◆ Cholesky分解(LDL^T版)のテスト
Ach = 
[  4  12 -16 ]
[  12  37 -43 ]
[ -16 -43  98 ]

Lch = 
[  4  0  0 ]
[  12  1  0 ]
[ -16  5  9 ]

Dch = 
[  0.25  0  0 ]
[  0  1  0 ]
[  0  0  0.111111 ]

Lch*Dch*tp(Lch) = 
[  4  12 -16 ]
[  12  37 -43 ]
[ -16 -43  98 ]


◆ Cholesky分解(LL^T版)のテスト
Ach = 
[  4  12 -16 ]
[  12  37 -43 ]
[ -16 -43  98 ]

Lch = 
[  2  0  0 ]
[  6  1  0 ]
[ -8  5  3 ]

Lch*tp(Lch) = 
[  4  12 -16 ]
[  12  37 -43 ]
[ -16 -43  98 ]


◆ QR分解(実数版)のテスト1
Aqr = 
[  2 -2  18 ]
[  2  1  0 ]
[  1  2  0 ]

Qqr = 
[   -0.667    0.667   -0.333 ]
[   -0.667   -0.333    0.667 ]
[   -0.333   -0.667   -0.667 ]

Rqr = 
[   -3.000    0.000  -12.000 ]
[   -0.000   -3.000   12.000 ]
[    0.000    0.000   -6.000 ]

Qqr*tp(Qqr) = 
[   1.000  -0.000  -0.000 ]
[  -0.000   1.000  -0.000 ]
[  -0.000  -0.000   1.000 ]

Qqr*Rqr = 
[  2 -2  18 ]
[  2  1 -2.59052e-15 ]
[  1  2 -1.40628e-15 ]


◆ QR分解(実数版)のテスト2
Aqr = 
[  12 -51  4 ]
[  6  167 -68 ]
[ -4  24 -41 ]

Qqr = 
[   -0.857    0.394   -0.331 ]
[   -0.429   -0.903    0.034 ]
[    0.286   -0.171   -0.943 ]

Rqr = 
[  -14.000  -21.000   14.000 ]
[   -0.000 -175.000   70.000 ]
[    0.000    0.000   35.000 ]

Qqr*tp(Qqr) = 
[   1.000   0.000  -0.000 ]
[   0.000   1.000   0.000 ]
[  -0.000   0.000   1.000 ]

Qqr*Rqr = 
[  12 -51  4 ]
[  6  167 -68 ]
[ -4  24 -41 ]


◆ QR分解(実数版)のテスト3
Aqr3 = 
[  12 -51  4  39 ]
[  6  167 -68  22 ]
[ -4  24 -41  11 ]

Qqr3 = 
[   -0.857    0.394   -0.331 ]
[   -0.429   -0.903    0.034 ]
[    0.286   -0.171   -0.943 ]

Rqr3 = 
[  -14.000  -21.000   14.000  -39.714 ]
[   -0.000 -175.000   70.000   -6.371 ]
[    0.000    0.000   35.000  -22.543 ]

Qqr3*tp(Qqr3) = 
[   1.000   0.000  -0.000 ]
[   0.000   1.000   0.000 ]
[  -0.000   0.000   1.000 ]

Qqr3*Rqr3 = 
[  12 -51  4  39 ]
[  6  167 -68  22 ]
[ -4  24 -41  11 ]


◆ QR分解(実数版)のテスト4
Aqr4 = 
[  12  6 -4 ]
[ -51  167  24 ]
[  4 -68 -41 ]
[  39  22  11 ]

Qqr4 = 
[   -0.183   -0.205   -0.333   -0.902 ]
[    0.779   -0.538   -0.311    0.079 ]
[   -0.061    0.445   -0.863    0.230 ]
[   -0.596   -0.686   -0.216    0.357 ]

Rqr4 = 
[  -65.437  120.100   15.389 ]
[   -0.000 -136.415  -37.868 ]
[   -0.000    0.000   26.892 ]
[   -0.000   -0.000    0.000 ]

Qqr4*tp(Qqr4) = 
[   1.000  -0.000   0.000   0.000 ]
[  -0.000   1.000  -0.000  -0.000 ]
[   0.000  -0.000   1.000   0.000 ]
[   0.000  -0.000   0.000   1.000 ]

Qqr4*Rqr4 = 
[  12  6 -4 ]
[ -51  167  24 ]
[  4 -68 -41 ]
[  39  22  11 ]


◆ SVD特異値分解のテスト1(縦長行列の場合)
As = 
[  1  2 ]
[  3  4 ]
[  5  6 ]
[  7  8 ]

Us = 
[ -0.152483 -0.822647 -0.394501 -0.379959 ]
[ -0.349918 -0.421375  0.242797  0.800656 ]
[ -0.547354 -0.0201031  0.69791 -0.461434 ]
[ -0.744789  0.381169 -0.546205  0.0407376 ]

Ss = 
[  14.2691  0 ]
[  0  0.626828 ]
[  0  0 ]
[  0  0 ]

Vs = 
[ -0.641423  0.767187 ]
[ -0.767187 -0.641423 ]

Us*Ss*tp(Vs) = 
[  1  2 ]
[  3  4 ]
[  5  6 ]
[  7  8 ]


◆ SVD特異値分解のテスト2(横長行列の場合)
As2 = 
[  1  3  5  7 ]
[  2  4  6  8 ]

Us2 = 
[  0.641423 -0.767187 ]
[  0.767187  0.641423 ]

Ss2 = 
[  14.2691  0  0  0 ]
[  0  0.626828  0  0 ]

Vs2 = 
[  0.152483  0.822647 -0.398468 -0.375797 ]
[  0.349918  0.421375  0.251187  0.798063 ]
[  0.547354  0.0201031  0.693028 -0.468735 ]
[  0.744789 -0.381169 -0.545748  0.0464686 ]

Us2*Ss2*tp(Vs2) = 
[  1  3  5  7 ]
[  2  4  6  8 ]


◆ SVD特異値分解のテスト3(ランク落ちの場合)
As3 = 
[  2  0  2 ]
[  0  1  0 ]
[  0  0  0 ]

Us3 = 
[ -1  0  0 ]
[  0 -1  0 ]
[  0  0  1 ]

Ss3 = 
[  2.82843  0  0 ]
[  0  1  0 ]
[  0  0  0 ]

Vs3 = 
[ -0.707107  0 -0.707107 ]
[  0 -1  0 ]
[ -0.707107  0  0.707107 ]

Us3*Ss3*tp(Vs3) = 
[  2  0  2 ]
[  0  1  0 ]
[  0  0  0 ]

rank(As3) = 2

◆ SVD特異値分解のテスト4(符号修正が必要な場合)
As4 = 
[  1  1  3 ]
[ -5  6 -3 ]
[  7 -2  9 ]

Us4 = 
[  0.173806  0.441969  0.880031 ]
[ -0.531253  0.794526 -0.294105 ]
[  0.829193  0.416402 -0.372891 ]

Ss4 = 
[  13.7156  0  0 ]
[  0  5.17371  0 ]
[  0  0  0.338215 ]

Vs4 = 
[  0.629532 -0.119034 -0.767802 ]
[ -0.340641  0.845877 -0.410434 ]
[  0.698322  0.519926  0.491959 ]

Us4*Ss4*tp(Vs4) = 
[  1  1  3 ]
[ -5  6 -3 ]
[  7 -2  9 ]


◆ 連立方程式の球解テスト
A = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

b = 
[  9 ]
[  5 ]
[  7 ]

xslv = 
[  2 ]
[  3 ]
[  4 ]

solve(A, b) = 
[  2 ]
[  3 ]
[  4 ]


◆ 上三角行列の連立方程式の球解テスト
Auptri = 
[  1  3  6 ]
[  0  2  7 ]
[  0  0 -4 ]

xslv = 
[ -6.375 ]
[  8.625 ]
[ -1.75 ]


◆ 行列式と逆行列のテスト
det(A) = -18.000000
inv(A) = 
[ -5.55555555555556e-02  1.11111111111111e-01  2.77777777777778e-01 ]
[  4.44444444444444e-01  1.11111111111111e-01 -2.22222222222222e-01 ]
[  6.11111111111111e-01 -2.22222222222222e-01 -5.55555555555555e-02 ]

inv_with_check(A) = 
[ -5.55555555555556e-02  1.11111111111111e-01  2.77777777777778e-01 ]
[  4.44444444444444e-01  1.11111111111111e-01 -2.22222222222222e-01 ]
[  6.11111111111111e-01 -2.22222222222222e-01 -5.55555555555555e-02 ]


◆ 左上小行列の逆行列のテスト
Ai5 = 
[  1  1  1  0  0 ]
[  2  3 -2  0  0 ]
[  3 -1  1  0  0 ]
[  0  0  0  0  0 ]
[  0  0  0  0  0 ]

inv(Ai5, 3) = 
[ -5.55555555555556e-02  1.11111111111111e-01  2.77777777777778e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  4.44444444444444e-01  1.11111111111111e-01 -2.22222222222222e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  6.11111111111111e-01 -2.22222222222222e-01 -5.55555555555555e-02  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]


◆ 上三角行列の逆行列のテスト
Auptri_inv = 
[  1 -1.5 -1.125 ]
[  0  0.5  0.875 ]
[ -0 -0 -0.25 ]


◆ 上三角行列で左上小行列の逆行列のテスト
Auptri2 = 
[  1  3  6  0 ]
[  0  2  7  0 ]
[  0  0 -4  0 ]
[  0  0  0  0 ]

Auptri_inv2 = 
[  1 -1.5 -1.125  0 ]
[  0  0.5  0.875  0 ]
[ -0 -0 -0.25  0 ]
[  0  0  0  0 ]


◆ 疑似逆行列のテスト
lpinv(D) = 
[  5.86267031518057e-01 -3.85646027987694e-01  6.16750081524437e-02 ]
[ -9.78924805469164e-02  8.16520395287180e-02  8.49916413285704e-03 ]

rpinv(tp(D)) = 
[  5.86267031518057e-01 -9.78924805469164e-02 ]
[ -3.85646027987694e-01  8.16520395287180e-02 ]
[  6.16750081524437e-02  8.49916413285704e-03 ]

lpinv(Dpinv) = 
[  2.00000000000000e-01  4.00000000000000e-01 ]

rpinv(tp(Dpinv)) = 
[  2.00000000000000e-01 ]
[  4.00000000000000e-01 ]


◆ 左上小行列の疑似逆行列のテスト
Dpinv45 = 
[  1  0  0  0 ]
[  2  0  0  0 ]
[  0  0  0  0 ]
[  0  0  0  0 ]
[  0  0  0  0 ]

lpinv(Dpinv45, 1) = 
[  2.00000000000000e-01  4.00000000000000e-01  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]

rpinv(tp(Dpinv45), 1) = 
[  2.00000000000000e-01  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  4.00000000000000e-01  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]

Dpinv45 = 
[  1  1  0  0 ]
[  2  3  0  0 ]
[  3 -1  0  0 ]
[  0  0  0  0 ]
[  0  0  0  0 ]

lpinv(Dpinv45, 2) = 
[  5.07246376811594e-02  7.24637681159420e-02  2.68115942028986e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  7.24637681159420e-02  2.46376811594203e-01 -1.88405797101449e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]

rpinv(tp(Dpinv45), 2) = 
[  5.07246376811594e-02  7.24637681159420e-02  0.00000000000000e+00  0.00000000000000e+00 ]
[  7.24637681159420e-02  2.46376811594203e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  2.68115942028986e-01 -1.88405797101449e-01  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]
[  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00  0.00000000000000e+00 ]


◆ 行列指数関数のテスト
A = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

Y = 
[  1.02027560946061e+01  1.17284784188030e+01 -1.84569759022138e+00 ]
[  5.35805549224018e+00  3.81844382685535e+01 -2.34569568376059e+01 ]
[  1.25618085747016e+01 -2.67902774612007e+00  1.02027560946060e+01 ]

det(Y)     =  1.48413159102575e+02
exp(tr(A)) =  1.48413159102577e+02

integral_expm(A,100e-6,10,6) = 
[  1.00005001000050e-04  5.00050006250475e-09  4.99999999999850e-09 ]
[  1.00003333750012e-08  1.00015002166863e-04 -1.00010001250095e-08 ]
[  1.50006667500038e-08 -5.00016668750058e-09  1.00005001000050e-04 ]


◆ 特に意味のないリッカチ方程式のテスト
P = 
[  1  2 -5 ]
[  2  1 -1 ]
[  7 -6  9 ]

Z = 
[   1379.860  -1326.280   1540.701 ]
[   -181.280    -75.140    140.140 ]
[  -4994.981   4210.841  -4767.261 ]

◆ float型のテスト
Af = 
[  1  1  1 ]
[  2  3 -2 ]
[  3 -1  1 ]

Yf = 
[ 1.02027339935303e+01 1.17284336090088e+01 -1.84568488597870e+00 ]
[ 5.35800981521606e+00 3.81842575073242e+01 -2.34568805694580e+01 ]
[ 1.25617990493774e+01 -2.67901182174683e+00 1.02027444839478e+01 ]

det(Y)     = 1.48412551879883e+02
exp(tr(A)) = 1.48413159102577e+02

integral_expm(Af,100e-6,10,6) = 
[  1.00004996056668e-04  5.00050001406294e-09  5.00000041370185e-09 ]
[  1.00003330061327e-08  1.00015007774346e-04 -1.00010000281259e-08 ]
[  1.50006673749203e-08 -5.00016650306634e-09  1.00004996056668e-04 ]

◆ int型のテスト
Ai = 
[  1  2 ]
[  3  4 ]

Bi = 
[  5  6 ]
[  7  8 ]

Ai*Bi = 
[  19  22 ]
[  43  50 ]

◆ long型のテスト
Al = 
[  1  2 ]
[  3  4 ]

Bl = 
[  5  6 ]
[  7  8 ]

Al*Bl = 
[  19  22 ]
[  43  50 ]

◆ 複素数型のテスト
Ac = 
[  1 + j 2  2 + j 3 ]
[  3 + j 4  4 + j 5 ]

Bc = 
[  1 + j 2  2 + j 3 ]
[  3 + j 4  4 + j 5 ]

Ac*Bc = 
[ -9 + j 21 -11 + j 29 ]
[ -13 + j 41 -15 + j 57 ]

Ac*Bc - std::complex(0.0,29.0) = 
[ -9 - j 8 -11 + j 0 ]
[ -13 + j 12 -15 + j 28 ]

reale(Ac) = 
[  1  2 ]
[  3  4 ]

image(Ac) = 
[  2  3 ]
[  4  5 ]

mage(Ac) = 
[  2.23607  3.60555 ]
[  5  6.40312 ]

arge(Ac) = 
[  1.10715  0.982794 ]
[  0.927295  0.896055 ]

conje(Ac) = 
[  1 - j 2  2 - j 3 ]
[  3 - j 4  4 - j 5 ]

◆ 負の平方根のテスト
Acomp = 
[  1 + j 0  1 + j 0  1 + j 0 ]
[  2 + j 0  3 + j 0 -2 + j 0 ]
[  3 + j 0 -1 + j 0  1 + j 0 ]

sqrte(A) = 
[  1.000  1.000  1.000 ]
[  1.414  1.732   -nan ]
[  1.732   -nan  1.000 ]

sqrte(Acomp) = 
[  1.000 + j 0.000  1.000 + j 0.000  1.000 + j 0.000 ]
[  1.414 + j 0.000  1.732 + j 0.000  0.000 + j 1.414 ]
[  1.732 + j 0.000  0.000 + j 1.000  1.000 + j 0.000 ]

◆ エルミート転置のテスト
Acomp2 = 
[  1 + j 2  3 - j 4 ]
[  5 - j 6  7 + j 8 ]
[  9 + j 10 -11 - j 12 ]

Htp(Acomp2) = 
[  1 - j 2  5 + j 6  9 - j 10 ]
[  3 + j 4  7 - j 8 -11 + j 12 ]

◆ 複素数LU分解のテスト
Acomp3 = 
[  4 + j 6  1 - j 3  5 + j 2 ]
[  8 - j 5 -7 - j 6  7 - j 1 ]
[  9 + j 9 -7 - j 5 -5 - j 3 ]

Lcomp = 
[  1 + j 0  0 + j 0  0 + j 0 ]
[  0.166667 - j 0.722222  1 + j 0  0 + j 0 ]
[  0.555556 + j 0.111111 -0.139892 + j 0.393502  1 + j 0 ]

Ucomp = 
[  9 + j 9 -7 - j 5 -5 - j 3 ]
[  0 + j 0 -2.22222 - j 10.2222  10 - j 4.11111 ]
[  0 + j 0  0 + j 0  7.22563 - j 0.287906 ]

reorderrow(Lcomp*Ucomp, vcomp) = 
[  4 + j 6  1 - j 3  5 + j 2 ]
[  8 - j 5 -7 - j 6  7 - j 1 ]
[  9 + j 9 -7 - j 5 -5 - j 3 ]

◆ 複素数逆行列のテスト
inv(Acomp3) = 
[  0.0333555 - j 0.105154 -0.0398708 + j 0.0366951  0.0054841 - j 0.0357545 ]
[ -0.0194015 - j 0.141605 -0.0787428 + j 0.0812367 -0.0505025 + j 0.0104159 ]
[  0.138177 + j 0.00550567  0.0214963 - j 0.0536026 -0.0410229 + j 0.00604718 ]

inv(Acomp3)*Acomp3 = 
[   1.000 + j  0.000   0.000 + j  0.000  -0.000 + j  0.000 ]
[  -0.000 - j  0.000   1.000 + j  0.000  -0.000 - j  0.000 ]
[  -0.000 + j  0.000  -0.000 + j  0.000   1.000 - j  0.000 ]

◆ 複素数QR分解のテスト
Qcqr = 
[  -0.414 + j  0.000   0.165 - j  0.101   0.888 + j  0.051 ]
[  -0.016 + j  0.542  -0.751 - j  0.064   0.104 + j  0.356 ]
[  -0.717 + j  0.143  -0.001 + j  0.628  -0.259 - j  0.064 ]

Rcqr = 
[  -9.656 - j 14.483   0.749 + j  9.719   0.430 - j  1.737 ]
[  -0.000 - j  0.000   2.984 + j  8.067  -6.449 + j  5.182 ]
[  -0.000 - j  0.000   0.000 + j  0.000   6.401 - j  0.623 ]

Qcqr*Htp(Qcqr) = 
[   1.000 + j  0.000   0.000 - j  0.000   0.000 + j  0.000 ]
[   0.000 + j  0.000   1.000 + j  0.000  -0.000 + j  0.000 ]
[   0.000 + j  0.000  -0.000 - j  0.000   1.000 + j  0.000 ]

Qcqr*Rcqr = 
[  4 + j 6  1 - j 3  5 + j 2 ]
[  8 - j 5 -7 - j 6  7 - j 1 ]
[  9 + j 9 -7 - j 5 -5 - j 3 ]

◆ 固有値計算のテスト1(実数固有値の場合)
Aeig = 
[ -3 -4  2 ]
[ -7  1 -5 ]
[  6 -7  3 ]

eigen(Aeig) = 
[ -6.68663 - j 2.66549e-31 ]
[ -3.03952 + j 1.83204e-29 ]
[  10.7262 - j 1.08259e-18 ]

eigenvec(Aeig) = 
[  0.282414 + j 0 ]
[ -0.591502 + j 0 ]
[  0.755227 + j 0 ]

◆ 固有値計算のテスト2(複素数固有値の場合)
Aeig = 
[  10 -8  5 ]
[ -8  9  6 ]
[ -1 -10  7 ]

eigen(Aeig) = 
[  17.3163 - j 1.19016e-13 ]
[  4.34187 + j 7.40124 ]
[  4.34187 - j 7.40124 ]

eigenvec(Aeig) = 
[  0.787992 + j 0 ]
[ -0.478494 + j 0 ]
[  0.387442 + j 0 ]


◆ 2乗のコンパイル時定数演算のテスト
Cxsq = 
[  6  3  0 ]
[  2  13 -6 ]
[  4 -1  6 ]


◆ 逆行列のコンパイル時定数演算のテスト
Cxinv = 
[ -0.0555556  0.111111  0.277778 ]
[  0.444444  0.111111 -0.222222 ]
[  0.611111 -0.222222 -0.0555556 ]


◆ 状態遷移行列のコンパイル時定数演算のテスト
Cxexp = 
[  1.02027560946061e+01  1.17284784188030e+01 -1.84569759022138e+00 ]
[  5.35805549224018e+00  3.81844382685535e+01 -2.34569568376059e+01 ]
[  1.25618085747016e+01 -2.67902774612007e+00  1.02027560946061e+01 ]

det(Y)     =  1.48413159102576e+02
exp(tr(A)) =  1.48413159102577e+02


◆ 状態遷移行列の定積分のコンパイル時定数演算のテスト
Cxexpint = 
[  1.00005001000050e-04  5.00050006250475e-09  4.99999999999850e-09 ]
[  1.00003333750012e-08  1.00015002166863e-04 -1.00010001250095e-08 ]
[  1.50006667500038e-08 -5.00016668750058e-09  1.00005001000050e-04 ]


◆ SVD特異値分解のコンパイル時定数演算のテスト
Uxsvd = 
[ -0.152483 -0.822647 -0.394501 -0.379959 ]
[ -0.349918 -0.421375  0.242797  0.800656 ]
[ -0.547354 -0.0201031  0.69791 -0.461434 ]
[ -0.744789  0.381169 -0.546205  0.0407376 ]

Sxsvd = 
[  14.2691  0 ]
[  0  0.626828 ]
[  0  0 ]
[  0  0 ]

Vxsvd = 
[ -0.641423  0.767187 ]
[ -0.767187 -0.641423 ]

Uxsvd*Sxsvd*tp(Vxsvd) = 
[  1  2 ]
[  3  4 ]
[  5  6 ]
[  7  8 ]


◆ 行列のランクのコンパイル時定数演算のテスト
Ark = 
[  2  0  2 ]
[  0  1  0 ]
[  0  0  0 ]

rank(Ark) = 2
